diff --git a/node_modules/@pedroslopez/moduleraid/moduleraid.js b/node_modules/@pedroslopez/moduleraid/moduleraid.js
index 39838b4..bb95392 100644
--- a/node_modules/@pedroslopez/moduleraid/moduleraid.js
+++ b/node_modules/@pedroslopez/moduleraid/moduleraid.js
@@ -1,16 +1,19 @@
-/* moduleRaid v5
- * https://github.com/@pedroslopez/moduleRaid
+/* moduleRaid v6
+ * https://github.com/wwebjs/moduleRaid
  *
- * Copyright pixeldesu, pedroslopez and other contributors
+ * Copyright pixeldesu, pedroslopez, purpshell and other contributors
  * Licensed under the MIT License
- * https://github.com/pedroslopez/moduleRaid/blob/master/LICENSE
+ * https://github.com/wwebjs/moduleRaid/blob/master/LICENSE
  */
 
 const moduleRaid = function () {
   moduleRaid.mID  = Math.random().toString(36).substring(7);
   moduleRaid.mObj = {};
 
-  fillModuleArray = function() {
+  const isComet = parseInt(window.Debug?.VERSION?.split(".")?.[1]) >= 3000;
+
+fillModuleArray = function() {
+    if (parseFloat(window.Debug.VERSION) < 2.3) {
     (window.webpackChunkbuild || window.webpackChunkwhatsapp_web_client).push([
       [moduleRaid.mID], {}, function(e) {
         Object.keys(e.m).forEach(function(mod) {
@@ -18,6 +21,26 @@ const moduleRaid = function () {
         })
       }
     ]);
+  } else {
+    let modules = self.require('__debug').modulesMap;
+    Object.keys(modules).filter(e => e.includes("WA")).forEach(function (mod) {
+        let modulos = modules[mod];
+        if (modulos) {
+          moduleRaid.mObj[mod] = {
+                default: modulos.defaultExport,
+                factory: modulos.factory,
+                ...modulos
+            };
+            if (Object.keys(moduleRaid.mObj[mod].default).length == 0) {
+                try {
+                    self.ErrorGuard.skipGuardGlobal(true);
+                    Object.assign(moduleRaid.mObj[mod], self.importNamespace(mod));
+                } catch (e) {
+                }
+            }
+        }
+    })
+  }
   }
 
   fillModuleArray();
@@ -51,7 +74,6 @@ const moduleRaid = function () {
         } else {
           throw new TypeError('findModule can only find via string and function, ' + (typeof query) + ' was passed');
         }
-        
       }
     })
 
